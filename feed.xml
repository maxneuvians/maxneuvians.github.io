<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Neuvians.IO</title>
  <subtitle>Full-stack development, Developer engagement &amp; Technical Documentation</subtitle>
  <id>http://www.neuvians.io</id>
  <link href="http://www.neuvians.io"/>
  <link href="http://www.neuvians.io/feed.xml" rel="self"/>
  <updated>2016-03-23T20:00:00-04:00</updated>
  <author>
    <name>Max Neuvians</name>
  </author>
  <entry>
    <title>Supervisor.start_children blocks</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/03/24/supervisor-start-children-blocks/"/>
    <id>http://www.neuvians.io/2016/03/24/supervisor-start-children-blocks/</id>
    <published>2016-03-23T20:00:00-04:00</published>
    <updated>2016-03-24T18:56:23-04:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">Knee deep into working with OTP I came across the following scenario: I had
a Supervisor that can dynamically spawn workers and each worker initializes their own state
with an expensive function. To speed</summary>
  </entry>
  <entry>
    <title>Using a Phoenix app as a dependency - a start</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/03/15/using-a-phoenix-app-as-a-dependency/"/>
    <id>http://www.neuvians.io/2016/03/15/using-a-phoenix-app-as-a-dependency/</id>
    <published>2016-03-14T20:00:00-04:00</published>
    <updated>2016-03-15T17:52:48-04:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">The purpose of this post is start the process of modifying an existing
Phoenix application (a Child) so it can be used by another Phoenix applications
(a Parent) as a dependency. There are two victory</summary>
  </entry>
  <entry>
    <title>Generating a SSH key pair in Elixir</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/03/03/generating-a-ssh-key-pair-using-elixir/"/>
    <id>http://www.neuvians.io/2016/03/03/generating-a-ssh-key-pair-using-elixir/</id>
    <published>2016-03-02T19:00:00-05:00</published>
    <updated>2016-03-03T18:40:38-05:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">Below is some boiler plate code to create and manage SSH keys inside
a Phoenix application. The keys should be in your priv/static directory so that
they get copied to your application code. ssh-keygen</summary>
  </entry>
  <entry>
    <title>Counting connections to a Phoenix Channel</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/02/27/counting-connections-to-a-phoenix-channel/"/>
    <id>http://www.neuvians.io/2016/02/27/counting-connections-to-a-phoenix-channel/</id>
    <published>2016-02-26T19:00:00-05:00</published>
    <updated>2016-02-27T19:20:41-05:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">I was unable to find a quick Google answer to this question, so I thought I
should post the “dirty” solution I found:

Realistically you can only count the subscribers to your local node unless
there is</summary>
  </entry>
  <entry>
    <title>Exometer Report via Phoenix Channels</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/02/26/exometer-report-via-phoenix-channels/"/>
    <id>http://www.neuvians.io/2016/02/26/exometer-report-via-phoenix-channels/</id>
    <published>2016-02-25T19:00:00-05:00</published>
    <updated>2016-02-26T13:44:52-05:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">LIVE DEMO: https://exometer-phoenix-channel-demo.herokuapp.com/

Exometer is an incredibly robust
package for Erlang to monitor system performance as well as any other type of
events one might be interested</summary>
  </entry>
  <entry>
    <title>Using WKHTMLTOPDF in Phoenix as a Plug</title>
    <link rel="alternate" href="http://www.neuvians.io/2016/02/18/wkhtmltopdf-elixir-plug-for-phoenix/"/>
    <id>http://www.neuvians.io/2016/02/18/wkhtmltopdf-elixir-plug-for-phoenix/</id>
    <published>2016-02-17T19:00:00-05:00</published>
    <updated>2016-02-18T11:34:17-05:00</updated>
    <author>
      <name>Max Neuvians</name>
    </author>
    <summary type="html">One really nice feature in the Rails world is the use of middleware to intercept
requests and transform the output. This also exists in Elixir / Phoenix with the
use of Plug.

Anybody familiar with the</summary>
  </entry>
</feed>
